import{_ as e,c as t,o,N as a}from"./chunks/framework.96eab4ee.js";const f=JSON.parse('{"title":"Overview","description":"","frontmatter":{},"headers":[],"relativePath":"loaders/overview.md"}'),r={name:"loaders/overview.md"},d=a('<h1 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h1><p>A loader defines how values get added to the store. Values can be loaded synchronously or asynchronously into the store.</p><h2 id="shared-options" tabindex="-1">Shared options <a class="header-anchor" href="#shared-options" aria-label="Permalink to &quot;Shared options&quot;">​</a></h2><p>All loader implementation share these options although some loaders may not implement them if they don&#39;t make sense for that loader.</p><table><thead><tr><th>Name</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td><code>stopOnFailure</code></td><td>Whether or not the loader should stop immediately if an error is encountered. This will cause subsequent loaders not be processed.</td><td><code>true</code></td></tr><tr><td><code>maxRetries</code></td><td>The number of times a loader should attempt to load values before giving up.</td><td><code>0</code></td></tr><tr><td><code>retryDelay</code></td><td>The amount of time to wait between retry attempts.</td><td><code>0</code></td></tr></tbody></table><h2 id="core-loaders" tabindex="-1">Core loaders <a class="header-anchor" href="#core-loaders" aria-label="Permalink to &quot;Core loaders&quot;">​</a></h2><p>The following loaders are included by default in <code>node-konfig-core</code>:</p><ul><li><a href="./file.html"><code>FileLoader</code></a></li><li><a href="./env.html"><code>EnvLoader</code></a></li><li><a href="./flag.html"><code>FlagLoader</code></a></li><li><a href="./value.html"><code>ValueLoader</code></a></li></ul>',8),l=[d];function s(i,n,h,c,u,m){return o(),t("div",null,l)}const _=e(r,[["render",s]]);export{f as __pageData,_ as default};
