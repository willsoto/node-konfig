(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[110],{3054:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>t});const p=(0,a(8133).uE)('<h1 id="groups"><a class="header-anchor" href="#groups">#</a> Groups</h1><p>Groups can be used to better organize the store. Groups can be thought of as &quot;sub-stores.&quot; They can specify their own loaders but still be accessed via the main store.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> Konfig <span class="token keyword">from</span> <span class="token string">&quot;@willsoto/node-konfig-core&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Konfig</span><span class="token punctuation">.</span><span class="token function">Store</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> group <span class="token operator">=</span> store<span class="token punctuation">.</span><span class="token function">group</span><span class="token punctuation">(</span><span class="token string">&quot;database&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">registerLoader</span><span class="token punctuation">(</span>\n  <span class="token keyword">new</span> <span class="token class-name">Konfig</span><span class="token punctuation">.</span><span class="token function">ValueLoader</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    values<span class="token operator">:</span> <span class="token punctuation">{</span>\n      host<span class="token operator">:</span> <span class="token string">&quot;localhost&quot;</span><span class="token punctuation">,</span>\n      port<span class="token operator">:</span> <span class="token number">5432</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// Will also initialize all groups within the store</span>\n<span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nstore<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">&quot;database.host&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;localhost&quot;</span>\ngroup<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">&quot;host&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;localhost&quot;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h2 id="group-options"><a class="header-anchor" href="#group-options">#</a> Group options</h2><p>Groups can also be initialized with the same options you would provide to the <code>Store</code>.</p><blockquote><p>Options will only be accepted and processed when a group is created. Subsequent calls with options will be ignored.</p></blockquote><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>store<span class="token punctuation">.</span><span class="token function">group</span><span class="token punctuation">(</span><span class="token string">&quot;database&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  loaders<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">Konfig</span><span class="token punctuation">.</span><span class="token function">ValueLoader</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      values<span class="token operator">:</span> <span class="token punctuation">{</span>\n        host<span class="token operator">:</span> <span class="token string">&quot;localhost&quot;</span><span class="token punctuation">,</span>\n        port<span class="token operator">:</span> <span class="token number">5432</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>',7),t={render:function(n,s){return p}}},1121:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>p});const p={key:"v-1eada719",path:"/guide/groups.html",title:"Groups",frontmatter:{},excerpt:"",headers:[{level:2,title:"Group options",slug:"group-options",children:[]}],filePathRelative:"guide/groups.md",git:{updatedTime:1618270568e3}}}}]);