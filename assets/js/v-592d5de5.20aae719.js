(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[79],{2419:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>t});const e=(0,a(8133).uE)('<h1 id="property-autocomplete"><a class="header-anchor" href="#property-autocomplete">#</a> Property autocomplete</h1><p>To enable TypeScript autocomplete for properties, you can provide an interface to the <code>Store</code> class like so:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> Konfig <span class="token keyword">from</span> <span class="token string">&quot;@willsoto/node-konfig-core&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">interface</span> <span class="token class-name">MyStore</span> <span class="token punctuation">{</span>\n  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n  database<span class="token operator">:</span> <span class="token punctuation">{</span>\n    host<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n    port<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Konfig</span><span class="token punctuation">.</span><span class="token generic-function"><span class="token function">Store</span><span class="token generic class-name"><span class="token operator">&lt;</span>MyStore<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nstore<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ✗ - error</span>\nstore<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;database.host&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ✓ - knows `database.host` is a `string`</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div>',3),t={render:function(n,s){return e}}},9438:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>e});const e={key:"v-592d5de5",path:"/guide/property-autocomplete.html",title:"Property autocomplete",frontmatter:{},excerpt:"",headers:[],filePathRelative:"guide/property-autocomplete.md",git:{updatedTime:161797109e4}}}}]);