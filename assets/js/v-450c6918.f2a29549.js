(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[810],{2635:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>t});const e=(0,a(8133).uE)('<h1 id="env"><a class="header-anchor" href="#env">#</a> Env</h1><h2 id="overview"><a class="header-anchor" href="#overview">#</a> Overview</h2><p>Loads configuration from environment varibles.</p><h2 id="usage"><a class="header-anchor" href="#usage">#</a> Usage</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable">PORT</span><span class="token operator">=</span><span class="token number">5432</span>\n<span class="token builtin class-name">export</span> <span class="token assign-left variable">HOSTS</span><span class="token operator">=</span>localhost:1234,localhost:5678\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> Konfig <span class="token keyword">from</span> <span class="token string">&quot;@willsoto/node-konfig-core&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> loader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Konfig</span><span class="token punctuation">.</span><span class="token function">EnvLoader</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  envVars<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      accessor<span class="token operator">:</span> <span class="token string">&quot;port&quot;</span><span class="token punctuation">,</span>\n      envVarName<span class="token operator">:</span> <span class="token string">&quot;PORT&quot;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      accessor<span class="token operator">:</span> <span class="token string">&quot;hosts&quot;</span><span class="token punctuation">,</span>\n      envVarName<span class="token operator">:</span> <span class="token string">&quot;HOSTS&quot;</span><span class="token punctuation">,</span>\n      arraySeparator<span class="token operator">:</span> <span class="token string">&quot;,&quot;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// Loads the following structure into the store</span>\nstore<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;port&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;5432&quot;</span>\nstore<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;hosts&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&quot;localhost:1234&quot;, &quot;localhost:5678&quot;]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h2 id="options"><a class="header-anchor" href="#options">#</a> Options</h2><table><thead><tr><th>Name</th><th>Required</th><th>Description</th></tr></thead><tbody><tr><td><code>envVars</code></td><td>yes</td><td>See <code>EnvVar</code></td></tr></tbody></table><h3 id="envvar"><a class="header-anchor" href="#envvar">#</a> EnvVar</h3><table><thead><tr><th>Name</th><th>Required</th><th>Description</th></tr></thead><tbody><tr><td><code>accessor</code></td><td>yes</td><td>Where to place the environment variable in the store. Can be in dot notation for nested structures.</td></tr><tr><td><code>envVarName</code></td><td>yes</td><td>The name of the environment variable to look up.</td></tr><tr><td><code>arraySeparator</code></td><td>no</td><td>If the value is meant to be an array, how should it be converted into a native JS array.</td></tr></tbody></table>',10),t={render:function(n,s){return e}}},6073:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>e});const e={key:"v-450c6918",path:"/loaders/env.html",title:"Env",frontmatter:{},excerpt:"",headers:[{level:2,title:"Overview",slug:"overview",children:[]},{level:2,title:"Usage",slug:"usage",children:[]},{level:2,title:"Options",slug:"options",children:[{level:3,title:"EnvVar",slug:"envvar",children:[]}]}],filePathRelative:"loaders/env.md",git:{updatedTime:161222883e4}}}}]);